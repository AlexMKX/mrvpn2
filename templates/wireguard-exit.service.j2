# WireGuard Exit Node systemd service template
# This service manages the WireGuard exit node container using Docker Compose
# Customize the WorkingDirectory path to match your tunnel configuration

[Unit]
Description=WireGuard Exit Node Service
After=docker.service network-online.target
Requires=docker.service
Wants=network-online.target

[Service]
Type=simple
User=root
# Set this to your WireGuard tunnel directory
WorkingDirectory=/opt/wg_tunnels/wg_exit1

# Stop existing containers before starting
ExecStartPre=-/bin/bash -c "docker compose version >/dev/null 2>&1 && echo 'Using docker compose' && docker compose down || (echo 'Using docker-compose' && /usr/local/bin/docker-compose down) || echo 'Compose down failed'"

# Pull latest images
ExecStartPre=-/bin/bash -c "docker compose version >/dev/null 2>&1 && echo 'Using docker compose' && docker compose pull || (echo 'Using docker-compose' && /usr/local/bin/docker-compose pull) || echo 'Compose pull failed'"

# Start the WireGuard tunnel
ExecStart=-/bin/bash -c "docker compose version >/dev/null 2>&1 && echo 'Using docker compose' && docker compose up || (echo 'Using docker-compose' && /usr/local/bin/docker-compose up) || (echo 'No compose command worked'; exit 1)"

# Stop the tunnel gracefully
ExecStop=-/bin/bash -c "docker compose version >/dev/null 2>&1 && docker compose down || /usr/local/bin/docker-compose down || echo 'Compose stop failed'"

Restart=always
RestartSec=15

# Environment variables for Docker
Environment=DOCKER_HOST=unix:///var/run/docker.sock

# Resource limits for high-performance networking
LimitNOFILE=65536
LimitNPROC=65536

[Install]
WantedBy=multi-user.target
